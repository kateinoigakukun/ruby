name: WebAssembly
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '**.md'
      - '**.rdoc'

jobs:
  make:
    strategy:
      matrix:
        entry:
          # wasmtime can't compile non-optimized Asyncified binary due to locals explosion
          - { name: O0-debuginfo, optflags: "-O0", debugflags: "-g", wasmoptflags: "-O1" }
          - { name: O1,           optflags: "-O1", debugflags: ""  , wasmoptflags: "-O1" }
          - { name: O2,           optflags: "-O2", debugflags: ""  , wasmoptflags: "-O2" }
          - { name: O3,           optflags: "-O3", debugflags: ""  , wasmoptflags: "-O3" }
          # -O4 is equivalent to -O3 in clang, but it's different in wasm-opt
          - { name: O4,           optflags: "-O4", debugflags: ""  , wasmoptflags: "-O4" }
          - { name: Oz,           optflags: "-Oz", debugflags: ""  , wasmoptflags: "-Oz" }
      fail-fast: false
    env:
      RUBY_TESTOPTS: '-q --tty=no'
      GITPULLOPTIONS: --no-tags origin ${{github.ref}}
    runs-on: macos-10.15
    steps:
      - run: mkdir build
        working-directory:
      - name: git config
        run: |
          git config --global advice.detachedHead 0
          git config --global init.defaultBranch garbage
      - uses: actions/checkout@v2
        with:
          path: src
      - name: Install libraries
        run: |
          set -ex
          brew upgrade
          brew install autoconf automake

          mkdir build-sdk
          pushd build-sdk
          curl -LO https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-14/wasi-sdk-14.0-macos.tar.gz
          tar xfz wasi-sdk-14.0-macos.tar.gz
          curl -LO https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-14/wasi-sysroot-14.0.tar.gz
          tar xfz wasi-sysroot-14.0.tar.gz
        working-directory: src
      - run: brew install wasmtime binaryen
      - name: Set ENV
        run: |
          echo "MAKEFLAGS=-j$((1 + $(sysctl -n hw.activecpu)))" >> $GITHUB_ENV
      - run: ./autogen.sh
        working-directory: src
      - name: Run configure
        run: |
          BUILD_SDK=$(PWD)/../src/build-sdk
          ../src/configure \
            --host wasm32-unknown-wasi \
            --with-static-linked-ext \
            --with-coroutine=asyncify \
            --disable-jit-support \
            CC=$BUILD_SDK/wasi-sdk-14.0/bin/clang \
            LD=$BUILD_SDK/wasi-sdk-14.0/bin/clang \
            AR=$BUILD_SDK/wasi-sdk-14.0/bin/llvm-ar \
            RANLIB=$BUILD_SDK/wasi-sdk-14.0/bin/llvm-ranlib \
            LDFLAGS=" \
              --sysroot=$BUILD_SDK/wasi-sysroot \
              -L$BUILD_SDK/wasi-sysroot/lib/wasm32-wasi \
              -Xlinker --stack-first \
              -Xlinker -z -Xlinker stack-size=16777216 \
            " \
            CFLAGS=" \
              --sysroot=$BUILD_SDK/wasi-sysroot \
            " \
            optflags="${{ matrix.entry.optflags }}" \
            debugflags="${{ matrix.entry.debugflags }}" \
            wasmoptflags="${{ matrix.entry.wasmoptflags }} ${{ matrix.entry.debugflags }}"

      - run: make miniruby
      - uses: actions/upload-artifact@v2
        with:
          name: miniruby-raw-${{ matrix.entry.name }}
          path: build/miniruby
      - run: make ruby
      - uses: actions/upload-artifact@v2
        with:
          name: ruby-raw-${{ matrix.entry.name }}
          path: build/ruby
      - name: Run basictest
        run: wasmtime run ./../build/miniruby --mapdir /::./ -- basictest/test.rb
        working-directory: src
      - name: Run bootstraptest (no thread)
        run: |
          NO_THREAD_TESTS="$(grep -L Thread -R ./bootstraptest | cut -d: -f1 | uniq | xargs basename | grep -e '^test_.*.rb$' | sed 's/test_\(.*\).rb/\1/' | paste -s -d, -)"
          ruby ./bootstraptest/runner.rb --ruby="$(which wasmtime) run $PWD/../build/ruby --mapdir /::./ -- " -j6 --verbose "--sets=$NO_THREAD_TESTS"
        working-directory: src

defaults:
  run:
    working-directory: build
